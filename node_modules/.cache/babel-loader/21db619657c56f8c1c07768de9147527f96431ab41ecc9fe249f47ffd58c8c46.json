{"ast":null,"code":"var _jsxFileName = \"/Users/ronili/Desktop/enter/code/weather-app/src/components/Setting/Setting.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./setting.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Setting = ({\n  setTempType,\n  isDarkMode,\n  setIsDarkMode,\n  setCity,\n  setCities,\n  cities\n}) => {\n  _s();\n  // Local state to hold the settings before they are saved\n  const [localTempType, setLocalTempType] = useState(\"celsius\");\n  const [localIsDarkMode, setLocalIsDarkMode] = useState(isDarkMode);\n  const [defaultCity, setDefaultCity] = useState(\"\");\n\n  // Handle input changes locally\n  const handleTempChange = event => {\n    setLocalTempType(event.target.value);\n  };\n  const handleDarkModeChange = event => {\n    setLocalIsDarkMode(!localIsDarkMode);\n  };\n  const handleCityChange = event => {\n    setDefaultCity(event.target.value);\n  };\n\n  // Apply changes to parent state when the \"Save Settings\" button is clicked\n  const handleSaveSettings = () => {\n    setTempType(localTempType);\n    setIsDarkMode(localIsDarkMode);\n    setCity(defaultCity);\n    setCities(() => {\n      if (!cities.includes(defaultCity)) {\n        return [...cities, defaultCity];\n      }\n      return cities;\n    });\n    localStorage.setItem('defaultCity', defaultCity);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `settings-page ${isDarkMode ? 'dark' : 'light'}`,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"settings-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"temp-unit\",\n        children: \"Temperature Unit: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"temp-unit\",\n        name: \"temp-unit\",\n        value: localTempType,\n        onChange: handleTempChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"celsius\",\n          children: \"Celsius\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"fahrenheit\",\n          children: \"Fahrenheit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"dark-mode\",\n        children: \"Dark Mode: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"dark-mode\",\n        name: \"dark-mode\",\n        checked: localIsDarkMode,\n        onChange: handleDarkModeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city-name\",\n        children: \"Default city: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city-name\",\n        className: \"change-default-city\",\n        placeholder: \"City name\",\n        value: defaultCity,\n        onChange: handleCityChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"save-settings-button\",\n        onClick: handleSaveSettings,\n        children: \"Save Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Setting, \"Yry8UjhtAV2olSX6EU4ZgLyY8/A=\");\n_c = Setting;\nexport default Setting;\nvar _c;\n$RefreshReg$(_c, \"Setting\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Setting","setTempType","isDarkMode","setIsDarkMode","setCity","setCities","cities","_s","localTempType","setLocalTempType","localIsDarkMode","setLocalIsDarkMode","defaultCity","setDefaultCity","handleTempChange","event","target","value","handleDarkModeChange","handleCityChange","handleSaveSettings","includes","localStorage","setItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","name","onChange","type","checked","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/ronili/Desktop/enter/code/weather-app/src/components/Setting/Setting.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./setting.css\";\n\ninterface Props {\n  setTempType: React.Dispatch<React.SetStateAction<string>>;\n  isDarkMode: boolean;\n  setIsDarkMode: React.Dispatch<React.SetStateAction<boolean>>;\n  setCity: React.Dispatch<React.SetStateAction<string>>;\n  setCities: React.Dispatch<React.SetStateAction<string[]>>;\n  cities: string[]\n}\n\nconst Setting: React.FC<Props> = ({ setTempType, isDarkMode, setIsDarkMode, setCity, setCities, cities }) => {\n  // Local state to hold the settings before they are saved\n  const [localTempType, setLocalTempType] = useState<string>(\"celsius\");\n  const [localIsDarkMode, setLocalIsDarkMode] = useState<boolean>(isDarkMode);\n  const [defaultCity, setDefaultCity] = useState<string>(\"\");\n\n  // Handle input changes locally\n  const handleTempChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setLocalTempType(event.target.value);\n  };\n\n  const handleDarkModeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setLocalIsDarkMode(!localIsDarkMode);\n  };\n\n  const handleCityChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setDefaultCity(event.target.value);\n  };\n\n  // Apply changes to parent state when the \"Save Settings\" button is clicked\n  const handleSaveSettings = () => {\n    setTempType(localTempType);\n    setIsDarkMode(localIsDarkMode);\n    setCity(defaultCity);\n    setCities(() => {\n        if (!cities.includes(defaultCity)) {\n            return [...cities, defaultCity]\n        }\n        return cities\n    })\n    localStorage.setItem('defaultCity', defaultCity)\n  };\n\n  return (\n    <div className={`settings-page ${isDarkMode ? 'dark' : 'light'}`}>\n      <form className=\"settings-form\">\n        <br />\n        <label htmlFor=\"temp-unit\">Temperature Unit: </label>\n        <select id=\"temp-unit\" name=\"temp-unit\" value={localTempType} onChange={handleTempChange}>\n          <option value=\"celsius\">Celsius</option>\n          <option value=\"fahrenheit\">Fahrenheit</option>\n        </select>\n        <br />\n        <br />\n        <label htmlFor=\"dark-mode\">Dark Mode: </label>\n        <input\n          type=\"checkbox\"\n          id=\"dark-mode\"\n          name=\"dark-mode\"\n          checked={localIsDarkMode}\n          onChange={handleDarkModeChange}\n        />\n        <br />\n        <br />\n        <label htmlFor=\"city-name\">Default city: </label>\n        <input\n          type=\"text\"\n          id=\"city-name\"\n          className=\"change-default-city\"\n          placeholder=\"City name\"\n          value={defaultCity}\n          onChange={handleCityChange}\n        />\n        <br />\n        <br />\n        <button type=\"button\" className=\"save-settings-button\" onClick={handleSaveSettings}>\n          Save Settings\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Setting;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}