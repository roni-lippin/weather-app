{"ast":null,"code":"var _jsxFileName = \"/Users/ronili/Desktop/enter/code/weather-app/src/components/DaysTemp/DaysTemp.tsx\";\nimport React from \"react\";\nimport \"./daysTemp.css\";\nimport DaysItem from \"../DaysItem/DaysItem\";\nimport calender from \"../calender.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst daysConvert = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nconst DaysTemp = ({\n  days,\n  tempType,\n  isDarkMode\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `condition-days-forecast ${isDarkMode ? 'dark' : 'light'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: calender,\n        alt: \"Calendar Icon\",\n        style: {\n          width: '20px',\n          height: '20px',\n          marginRight: '8px',\n          filter: 'invert(100%)'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), \"3-DAY FORECAST\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: days.map(item => /*#__PURE__*/_jsxDEV(DaysItem, {\n        // Unique key\n        day: daysConvert[new Date(item.date).getDay()],\n        icon: item.day.condition.icon,\n        minTemp: tempType === 'celsius' ? item.day.mintemp_c : item.day.mintemp_f // Toggle between Celsius and Fahrenheit\n        ,\n        maxTemp: tempType === 'celsius' ? item.day.maxtemp_c : item.day.maxtemp_f // Toggle between Celsius and Fahrenheit\n      }, item.time, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_c = DaysTemp;\nexport default DaysTemp;\nvar _c;\n$RefreshReg$(_c, \"DaysTemp\");","map":{"version":3,"names":["React","DaysItem","calender","jsxDEV","_jsxDEV","daysConvert","DaysTemp","days","tempType","isDarkMode","className","children","src","alt","style","width","height","marginRight","filter","fileName","_jsxFileName","lineNumber","columnNumber","map","item","day","Date","date","getDay","icon","condition","minTemp","mintemp_c","mintemp_f","maxTemp","maxtemp_c","maxtemp_f","time","_c","$RefreshReg$"],"sources":["/Users/ronili/Desktop/enter/code/weather-app/src/components/DaysTemp/DaysTemp.tsx"],"sourcesContent":["import React from \"react\";\nimport \"./daysTemp.css\"\nimport DaysItem from \"../DaysItem/DaysItem\";\nimport calender from \"../calender.svg\"\n\ninterface Props {\n  days: any,\n  tempType: string\n  isDarkMode: boolean\n}\n\nconst daysConvert = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\n\nconst DaysTemp: React.FC<Props> = ({ days, tempType, isDarkMode }) => {\n    return (\n        <div className={`condition-days-forecast ${isDarkMode ? 'dark' : 'light'}`}>\n        <h3>\n        <img src={calender} alt=\"Calendar Icon\" style={{ width: '20px', height: '20px', marginRight: '8px', filter: 'invert(100%)'}} />\n        3-DAY FORECAST\n        </h3>\n        <table>\n            {days.map((item: any) => (\n              <DaysItem\n                key={item.time} // Unique key\n                day={daysConvert[(new Date(item.date)).getDay()]}\n                icon={item.day.condition.icon}\n                minTemp={tempType === 'celsius' ? item.day.mintemp_c : item.day.mintemp_f} // Toggle between Celsius and Fahrenheit\n                maxTemp={tempType === 'celsius' ? item.day.maxtemp_c : item.day.maxtemp_f} // Toggle between Celsius and Fahrenheit\n              />\n            ))}\n        </table>\n      </div>\n    )\n}\n\nexport default DaysTemp"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AACvB,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,QAAQ,MAAM,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQtC,MAAMC,WAAW,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;AAErE,MAAMC,QAAyB,GAAGA,CAAC;EAAEC,IAAI;EAAEC,QAAQ;EAAEC;AAAW,CAAC,KAAK;EAClE,oBACIL,OAAA;IAAKM,SAAS,EAAE,2BAA2BD,UAAU,GAAG,MAAM,GAAG,OAAO,EAAG;IAAAE,QAAA,gBAC3EP,OAAA;MAAAO,QAAA,gBACAP,OAAA;QAAKQ,GAAG,EAAEV,QAAS;QAACW,GAAG,EAAC,eAAe;QAACC,KAAK,EAAE;UAAEC,KAAK,EAAE,MAAM;UAAEC,MAAM,EAAE,MAAM;UAAEC,WAAW,EAAE,KAAK;UAAEC,MAAM,EAAE;QAAc;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,kBAE/H;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACLlB,OAAA;MAAAO,QAAA,EACKJ,IAAI,CAACgB,GAAG,CAAEC,IAAS,iBAClBpB,OAAA,CAACH,QAAQ;QACS;QAChBwB,GAAG,EAAEpB,WAAW,CAAE,IAAIqB,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,CAAEC,MAAM,CAAC,CAAC,CAAE;QACjDC,IAAI,EAAEL,IAAI,CAACC,GAAG,CAACK,SAAS,CAACD,IAAK;QAC9BE,OAAO,EAAEvB,QAAQ,KAAK,SAAS,GAAGgB,IAAI,CAACC,GAAG,CAACO,SAAS,GAAGR,IAAI,CAACC,GAAG,CAACQ,SAAU,CAAC;QAAA;QAC3EC,OAAO,EAAE1B,QAAQ,KAAK,SAAS,GAAGgB,IAAI,CAACC,GAAG,CAACU,SAAS,GAAGX,IAAI,CAACC,GAAG,CAACW,SAAU,CAAC;MAAA,GAJtEZ,IAAI,CAACa,IAAI;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKf,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEZ,CAAC;AAAAgB,EAAA,GApBKhC,QAAyB;AAsB/B,eAAeA,QAAQ;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}