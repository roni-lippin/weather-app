{"ast":null,"code":"var _jsxFileName = \"/Users/ronili/Desktop/enter/code/weather-app/src/components/ConditionGrid/ConditionGrid.tsx\";\nimport React from \"react\";\nimport \"./conditionGrid.css\";\nimport HoursTemp from \"../HoursTemp/HoursTemp\";\nimport DaysTemp from \"../DaysTemp/DaysTemp\";\nimport WindMap from \"../WindMap/WindMap\";\nimport GeneralCondition from \"../GeneralCondition/GeneralCondition\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConditionGrid = ({\n  city,\n  data,\n  tempType,\n  isDarkMode\n}) => {\n  const tempProps = tempType === 'celsius' ? {\n    feelsLike: data.current.feelslike_c,\n    average: data.forecast.forecastday[0].day.avgtemp_c,\n    temp: data.current.temp_c\n  } : {\n    feelsLike: data.current.feelslike_f,\n    average: data.forecast.forecastday[0].day.avgtemp_f,\n    temp: data.current.temp_f\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conditions-grid\",\n    children: [/*#__PURE__*/_jsxDEV(HoursTemp, {\n      data: data,\n      tempType: tempType,\n      isDarkMode: isDarkMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DaysTemp, {\n      days: data.forecast.forecastday,\n      tempType: tempType,\n      isDarkMode: isDarkMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(WindMap, {\n      city: city,\n      isDarkMode: isDarkMode,\n      temp: tempProps.temp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GeneralCondition, {\n      title: \"UV INDEX\",\n      isDarkMode: isDarkMode,\n      icon: \"sun\",\n      children: data.current.uv\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GeneralCondition, {\n      title: \"SUNSET\",\n      isDarkMode: isDarkMode,\n      icon: \"sunset\",\n      children: [data.forecast.forecastday[0].astro.sunset, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 24\n      }, this), \"Sunrise: \", data.forecast.forecastday[0].astro.sunrise]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GeneralCondition, {\n      title: \"WIND\",\n      isDarkMode: isDarkMode,\n      icon: \"wind\",\n      children: [parseInt(data.current.wind_kph.toString()), \" km/h\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GeneralCondition, {\n      title: \"PRECIPITATION\",\n      isDarkMode: isDarkMode,\n      icon: \"raindrop\",\n      children: [parseInt(data.current.precip_mm.toString()), \" mm in last 24h\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GeneralCondition, {\n      title: \"FEELS LIKE\",\n      isDarkMode: isDarkMode,\n      icon: \"termomether\",\n      children: [tempProps.feelsLike, \"\\xB0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GeneralCondition, {\n      title: \"VISIBILITY\",\n      isDarkMode: isDarkMode,\n      icon: \"eye\",\n      children: [data.current.vis_km, \" km\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GeneralCondition, {\n      title: \"HUMIDITY\",\n      isDarkMode: isDarkMode,\n      icon: \"humidity\",\n      children: [data.current.humidity, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GeneralCondition, {\n      title: \"PRESSURE\",\n      isDarkMode: isDarkMode,\n      icon: \"barometer\",\n      children: [data.current.pressure_mb, \" mbar\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GeneralCondition, {\n      title: \"AVERAGE\",\n      isDarkMode: isDarkMode,\n      icon: \"graph\",\n      children: [parseInt(tempProps.average.toString()), \"\\xB0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_c = ConditionGrid;\nexport default ConditionGrid;\nvar _c;\n$RefreshReg$(_c, \"ConditionGrid\");","map":{"version":3,"names":["React","HoursTemp","DaysTemp","WindMap","GeneralCondition","jsxDEV","_jsxDEV","ConditionGrid","city","data","tempType","isDarkMode","tempProps","feelsLike","current","feelslike_c","average","forecast","forecastday","day","avgtemp_c","temp","temp_c","feelslike_f","avgtemp_f","temp_f","className","children","fileName","_jsxFileName","lineNumber","columnNumber","days","title","icon","uv","astro","sunset","sunrise","parseInt","wind_kph","toString","precip_mm","vis_km","humidity","pressure_mb","_c","$RefreshReg$"],"sources":["/Users/ronili/Desktop/enter/code/weather-app/src/components/ConditionGrid/ConditionGrid.tsx"],"sourcesContent":["import React from \"react\";\nimport \"./conditionGrid.css\"\nimport HoursTemp from \"../HoursTemp/HoursTemp\";\nimport DaysTemp from \"../DaysTemp/DaysTemp\";\nimport WindMap from \"../WindMap/WindMap\";\nimport GeneralCondition from \"../GeneralCondition/GeneralCondition\";\n\ninterface Props {\n    city: string\n    data: any\n    tempType: string\n    isDarkMode: boolean\n}\n\n\nconst ConditionGrid: React.FC<Props> = ({ city, data, tempType, isDarkMode })  => {\n    const tempProps = tempType === 'celsius' ? {\n        feelsLike: data.current.feelslike_c,\n        average: data.forecast.forecastday[0].day.avgtemp_c,\n        temp: data.current.temp_c\n    } : {\n        feelsLike: data.current.feelslike_f,\n        average: data.forecast.forecastday[0].day.avgtemp_f,\n        temp: data.current.temp_f\n    } \n    return (\n        <div className=\"conditions-grid\">\n            <HoursTemp data={data} tempType={tempType} isDarkMode={isDarkMode}/>\n            <DaysTemp days={data.forecast.forecastday} tempType={tempType} isDarkMode={isDarkMode}/>\n            <WindMap city={city} isDarkMode={isDarkMode} temp={tempProps.temp}/>\n            <GeneralCondition title=\"UV INDEX\" isDarkMode={isDarkMode} icon='sun'>\n                {data.current.uv}\n            </GeneralCondition>\n            <GeneralCondition title=\"SUNSET\" isDarkMode={isDarkMode} icon='sunset'>\n                {data.forecast.forecastday[0].astro.sunset}\n                <br /> <br />\n                Sunrise: {data.forecast.forecastday[0].astro.sunrise}\n            </GeneralCondition>\n            <GeneralCondition title=\"WIND\" isDarkMode={isDarkMode} icon='wind'>\n                {parseInt(data.current.wind_kph.toString())} km/h\n            </GeneralCondition>\n            <GeneralCondition title=\"PRECIPITATION\" isDarkMode={isDarkMode} icon='raindrop'>\n                {parseInt(data.current.precip_mm.toString())} mm in last 24h\n            </GeneralCondition>\n            <GeneralCondition title=\"FEELS LIKE\" isDarkMode={isDarkMode} icon=\"termomether\">\n                {tempProps.feelsLike}°\n            </GeneralCondition>\n            <GeneralCondition title=\"VISIBILITY\" isDarkMode={isDarkMode} icon=\"eye\">\n                {data.current.vis_km} km\n            </GeneralCondition>\n            <GeneralCondition title=\"HUMIDITY\" isDarkMode={isDarkMode} icon=\"humidity\">\n                {data.current.humidity}%\n            </GeneralCondition>\n            <GeneralCondition title=\"PRESSURE\" isDarkMode={isDarkMode} icon=\"barometer\">\n                {data.current.pressure_mb} mbar\n            </GeneralCondition>\n            <GeneralCondition title=\"AVERAGE\" isDarkMode={isDarkMode} icon=\"graph\">\n                {parseInt(tempProps.average.toString())}°\n            </GeneralCondition>\n        </div>\n    )\n}\n\nexport default ConditionGrid"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}