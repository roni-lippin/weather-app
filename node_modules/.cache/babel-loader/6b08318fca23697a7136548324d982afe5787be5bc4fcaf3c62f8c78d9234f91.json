{"ast":null,"code":"var _jsxFileName = \"/Users/ronili/Desktop/enter/code/weather-app/src/components/GeneralCondition/GeneralCondition.tsx\";\nimport React from \"react\";\nimport \"./generalCondition.css\";\nimport sun from \"../sun.png\";\nimport sunset from \"../sunset.png\";\nimport wind from \"../wind.png\";\nimport raindrop from \"../raindrop.png\";\nimport termomether from \"../termomether.png\";\nimport eye from \"../eye.png\";\nimport humidity from \"../humidity.png\";\nimport barometer from \"../barometer.png\";\nimport graph from \"../graph.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst iconMap = {\n  sun,\n  sunset,\n  wind,\n  raindrop,\n  termomether,\n  eye,\n  humidity,\n  barometer,\n  graph\n};\nconst GeneralCondition = ({\n  title,\n  children,\n  isDarkMode,\n  icon\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `condition ${isDarkMode ? 'dark' : 'light'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: iconMap[icon],\n        style: {\n          width: '20px',\n          height: '20px',\n          marginRight: '8px',\n          filter: 'invert(100%)'\n        },\n        alt: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_c = GeneralCondition;\nexport default GeneralCondition;\nvar _c;\n$RefreshReg$(_c, \"GeneralCondition\");","map":{"version":3,"names":["React","sun","sunset","wind","raindrop","termomether","eye","humidity","barometer","graph","jsxDEV","_jsxDEV","iconMap","GeneralCondition","title","children","isDarkMode","icon","className","src","style","width","height","marginRight","filter","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ronili/Desktop/enter/code/weather-app/src/components/GeneralCondition/GeneralCondition.tsx"],"sourcesContent":["import React, { ReactNode } from \"react\";\nimport \"./generalCondition.css\";\nimport sun from \"../sun.png\";\nimport sunset from \"../sunset.png\";\nimport wind from \"../wind.png\";\nimport raindrop from \"../raindrop.png\";\nimport termomether from \"../termomether.png\";\nimport eye from \"../eye.png\";\nimport humidity from \"../humidity.png\";\nimport barometer from \"../barometer.png\";\nimport graph from \"../graph.png\";\n\ntype IconName = 'sun' | 'sunset' | 'wind' | 'raindrop' | 'termomether' | 'eye' | 'humidity' | 'barometer' | 'graph';\n\nconst iconMap: Record<IconName, string> = {\n    sun,\n    sunset,\n    wind,\n    raindrop,\n    termomether,\n    eye,\n    humidity,\n    barometer,\n    graph\n};\n\ninterface Props {\n    title: string;\n    children: ReactNode;\n    isDarkMode: boolean;\n    icon: IconName;\n}\n\nconst GeneralCondition: React.FC<Props> = ({ title, children, isDarkMode, icon }) => {\n    return (\n        <div className={`condition ${isDarkMode ? 'dark' : 'light'}`}>\n            <h3>\n                <img\n                    src={iconMap[icon]}\n                    style={{\n                        width: '20px',\n                        height: '20px',\n                        marginRight: '8px',\n                        filter: 'invert(100%)'\n                    }}\n                    alt={title}\n                />\n                {title}\n            </h3>\n            <br />\n            <h4>{children}</h4>\n        </div>\n    );\n};\n\nexport default GeneralCondition;"],"mappings":";AAAA,OAAOA,KAAK,MAAqB,OAAO;AACxC,OAAO,wBAAwB;AAC/B,OAAOC,GAAG,MAAM,YAAY;AAC5B,OAAOC,MAAM,MAAM,eAAe;AAClC,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAOC,QAAQ,MAAM,iBAAiB;AACtC,OAAOC,WAAW,MAAM,oBAAoB;AAC5C,OAAOC,GAAG,MAAM,YAAY;AAC5B,OAAOC,QAAQ,MAAM,iBAAiB;AACtC,OAAOC,SAAS,MAAM,kBAAkB;AACxC,OAAOC,KAAK,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIjC,MAAMC,OAAiC,GAAG;EACtCX,GAAG;EACHC,MAAM;EACNC,IAAI;EACJC,QAAQ;EACRC,WAAW;EACXC,GAAG;EACHC,QAAQ;EACRC,SAAS;EACTC;AACJ,CAAC;AASD,MAAMI,gBAAiC,GAAGA,CAAC;EAAEC,KAAK;EAAEC,QAAQ;EAAEC,UAAU;EAAEC;AAAK,CAAC,KAAK;EACjF,oBACIN,OAAA;IAAKO,SAAS,EAAE,aAAaF,UAAU,GAAG,MAAM,GAAG,OAAO,EAAG;IAAAD,QAAA,gBACzDJ,OAAA;MAAAI,QAAA,gBACIJ,OAAA;QACIQ,GAAG,EAAEP,OAAO,CAACK,IAAI,CAAE;QACnBG,KAAK,EAAE;UACHC,KAAK,EAAE,MAAM;UACbC,MAAM,EAAE,MAAM;UACdC,WAAW,EAAE,KAAK;UAClBC,MAAM,EAAE;QACZ,CAAE;QACFC,GAAG,EAAEX;MAAM;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CAAC,EACDf,KAAK;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACLlB,OAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNlB,OAAA;MAAAI,QAAA,EAAKA;IAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEd,CAAC;AAACC,EAAA,GApBIjB,gBAAiC;AAsBvC,eAAeA,gBAAgB;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}