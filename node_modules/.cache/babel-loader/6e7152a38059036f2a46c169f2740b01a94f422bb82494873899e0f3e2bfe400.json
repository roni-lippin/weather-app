{"ast":null,"code":"var _jsxFileName = \"/Users/ronili/Desktop/enter/code/weather-app/src/components/MainContent/MainContent.tsx\";\nimport React from \"react\";\nimport \"./mainContent.css\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport Content from \"../Content/Content\";\nimport ConditionGrid from \"../ConditionGrid/ConditionGrid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainContent = ({\n  city,\n  setCity,\n  data,\n  tempType,\n  setCities,\n  isDarkMode\n}) => {\n  if (!data || !data.current || !data.forecast || !data.forecast.forecastday) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 16\n    }, this);\n  }\n  const tempProps = tempType === 'celsius' ? {\n    temp: data.current.temp_c,\n    minTemp: data.forecast.forecastday[0].day.mintemp_c,\n    maxTemp: data.forecast.forecastday[0].day.maxtemp_c\n  } : {\n    temp: data.current.temp_f,\n    minTemp: data.forecast.forecastday[0].day.mintemp_f,\n    maxTemp: data.forecast.forecastday[0].day.maxtemp_f\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-content\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      setCity: setCity,\n      setCities: setCities,\n      isDarkMode: isDarkMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      city: data.location.name,\n      temp: tempProps.temp,\n      situation: data.current.condition.text,\n      minTemp: tempProps.minTemp,\n      maxTemp: tempProps.maxTemp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ConditionGrid, {\n      city: data.location.name,\n      data: data,\n      tempType: tempType,\n      isDarkMode: isDarkMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_c = MainContent;\nexport default MainContent;\nvar _c;\n$RefreshReg$(_c, \"MainContent\");","map":{"version":3,"names":["React","SearchBar","Content","ConditionGrid","jsxDEV","_jsxDEV","MainContent","city","setCity","data","tempType","setCities","isDarkMode","current","forecast","forecastday","children","fileName","_jsxFileName","lineNumber","columnNumber","tempProps","temp","temp_c","minTemp","day","mintemp_c","maxTemp","maxtemp_c","temp_f","mintemp_f","maxtemp_f","className","location","name","situation","condition","text","_c","$RefreshReg$"],"sources":["/Users/ronili/Desktop/enter/code/weather-app/src/components/MainContent/MainContent.tsx"],"sourcesContent":["import React from \"react\";\nimport \"./mainContent.css\"\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport Content from \"../Content/Content\";\nimport ConditionGrid from \"../ConditionGrid/ConditionGrid\";\n\ninterface Props {\n    city: string,\n    setCity: React.Dispatch<React.SetStateAction<string>>,\n    data: any,\n    tempType: string\n    setCities: React.Dispatch<React.SetStateAction<string[]>>\n    isDarkMode: boolean\n} \n\n\nconst MainContent: React.FC<Props> = ({ city, setCity, data, tempType, setCities, isDarkMode}) => {\n    if (!data || !data.current || !data.forecast || !data.forecast.forecastday) {\n        return <div>Loading...</div>;\n    }\n\n    const tempProps = tempType === 'celsius' ? {\n        temp: data.current.temp_c,\n        minTemp: data.forecast.forecastday[0].day.mintemp_c,\n        maxTemp: data.forecast.forecastday[0].day.maxtemp_c\n    } : {\n        temp: data.current.temp_f,\n        minTemp: data.forecast.forecastday[0].day.mintemp_f,\n        maxTemp: data.forecast.forecastday[0].day.maxtemp_f\n    } \n    return (\n        <div className=\"main-content\">\n            <SearchBar setCity={setCity} setCities={setCities} isDarkMode={isDarkMode}/>\n            <Content\n                city={data.location.name}\n                temp={tempProps.temp}\n                situation={data.current.condition.text}\n                minTemp={tempProps.minTemp}\n                maxTemp={tempProps.maxTemp}\n            />\n            <ConditionGrid city={data.location.name} data={data} tempType={tempType} isDarkMode={isDarkMode}/>\n        </div>\n    )\n}\n\nexport default MainContent"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,mBAAmB;AAC1B,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,aAAa,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAY3D,MAAMC,WAA4B,GAAGA,CAAC;EAAEC,IAAI;EAAEC,OAAO;EAAEC,IAAI;EAAEC,QAAQ;EAAEC,SAAS;EAAEC;AAAU,CAAC,KAAK;EAC9F,IAAI,CAACH,IAAI,IAAI,CAACA,IAAI,CAACI,OAAO,IAAI,CAACJ,IAAI,CAACK,QAAQ,IAAI,CAACL,IAAI,CAACK,QAAQ,CAACC,WAAW,EAAE;IACxE,oBAAOV,OAAA;MAAAW,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC;EAEA,MAAMC,SAAS,GAAGX,QAAQ,KAAK,SAAS,GAAG;IACvCY,IAAI,EAAEb,IAAI,CAACI,OAAO,CAACU,MAAM;IACzBC,OAAO,EAAEf,IAAI,CAACK,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC,CAACU,GAAG,CAACC,SAAS;IACnDC,OAAO,EAAElB,IAAI,CAACK,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC,CAACU,GAAG,CAACG;EAC9C,CAAC,GAAG;IACAN,IAAI,EAAEb,IAAI,CAACI,OAAO,CAACgB,MAAM;IACzBL,OAAO,EAAEf,IAAI,CAACK,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC,CAACU,GAAG,CAACK,SAAS;IACnDH,OAAO,EAAElB,IAAI,CAACK,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC,CAACU,GAAG,CAACM;EAC9C,CAAC;EACD,oBACI1B,OAAA;IAAK2B,SAAS,EAAC,cAAc;IAAAhB,QAAA,gBACzBX,OAAA,CAACJ,SAAS;MAACO,OAAO,EAAEA,OAAQ;MAACG,SAAS,EAAEA,SAAU;MAACC,UAAU,EAAEA;IAAW;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC5Ef,OAAA,CAACH,OAAO;MACJK,IAAI,EAAEE,IAAI,CAACwB,QAAQ,CAACC,IAAK;MACzBZ,IAAI,EAAED,SAAS,CAACC,IAAK;MACrBa,SAAS,EAAE1B,IAAI,CAACI,OAAO,CAACuB,SAAS,CAACC,IAAK;MACvCb,OAAO,EAAEH,SAAS,CAACG,OAAQ;MAC3BG,OAAO,EAAEN,SAAS,CAACM;IAAQ;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACFf,OAAA,CAACF,aAAa;MAACI,IAAI,EAAEE,IAAI,CAACwB,QAAQ,CAACC,IAAK;MAACzB,IAAI,EAAEA,IAAK;MAACC,QAAQ,EAAEA,QAAS;MAACE,UAAU,EAAEA;IAAW;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjG,CAAC;AAEd,CAAC;AAAAkB,EAAA,GA3BKhC,WAA4B;AA6BlC,eAAeA,WAAW;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}