{"ast":null,"code":"var _jsxFileName = \"/Users/ronili/Desktop/enter/code/weather-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport SideBar from './components/SideBar/SideBar';\nimport MainContent from './components/MainContent/MainContent';\nimport { Route, Routes } from 'react-router-dom';\nimport Header from './components/Header/Header';\nimport Setting from './components/Setting/Setting';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = 'a6013d4da00e4e93a7a110941240409';\nfunction App() {\n  _s();\n  const [data, setData] = useState(null); // Default to null instead of undefined\n  const [city, setCity] = useState(() => localStorage.getItem('defaultCity') || 'london');\n  const [tempType, setTempType] = useState('celsius');\n  const [loading, setLoading] = useState(true); // Add loading state\n  const [cities, setCities] = useState([localStorage.getItem('defaultCity') || 'london']);\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true); // Set loading to true when fetching starts\n      try {\n        const response = await fetch(`http://api.weatherapi.com/v1/forecast.json?q=${city}&key=${API_KEY}&days=10`);\n        if (!response.ok) {\n          throw new Error('City not found');\n        }\n        const result = await response.json();\n        setData(result);\n      } catch (e) {\n        console.error(e);\n        alert('City not found. Please enter a valid city name.');\n      } finally {\n        setLoading(false); // Set loading to false after fetching completes\n      }\n    };\n    fetchData();\n  }, [city]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${isDarkMode ? 'dark' : 'light'}`,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      isDarkMode: isDarkMode,\n      setCities: setCities,\n      setCity: setCity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SideBar, {\n      tempType: tempType,\n      cities: cities,\n      setCity: setCity,\n      setCities: setCities,\n      isDarkMode: isDarkMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(MainContent, {\n          city: city,\n          setCity: setCity,\n          data: data,\n          tempType: tempType,\n          setCities: setCities,\n          isDarkMode: isDarkMode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/Settings\",\n        element: /*#__PURE__*/_jsxDEV(Setting, {\n          setTempType: setTempType,\n          isDarkMode: isDarkMode,\n          setIsDarkMode: setIsDarkMode,\n          setCity: setCity,\n          setCities: setCities,\n          cities: cities\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/W5BEPI13flGPxdD6aApKcTi/TI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","SideBar","MainContent","Route","Routes","Header","Setting","jsxDEV","_jsxDEV","API_KEY","App","_s","data","setData","city","setCity","localStorage","getItem","tempType","setTempType","loading","setLoading","cities","setCities","isDarkMode","setIsDarkMode","fetchData","response","fetch","ok","Error","result","json","e","console","error","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["/Users/ronili/Desktop/enter/code/weather-app/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport SideBar from './components/SideBar/SideBar';\nimport MainContent from './components/MainContent/MainContent';\nimport { Route, Routes } from 'react-router-dom'; \nimport Header from './components/Header/Header';\nimport Setting from './components/Setting/Setting';\n\nconst API_KEY = 'a6013d4da00e4e93a7a110941240409';\n\nfunction App() {\n  const [data, setData] = useState<any>(null); // Default to null instead of undefined\n  const [city, setCity] = useState<string>(() => localStorage.getItem('defaultCity') || 'london');\n  const [tempType, setTempType] = useState<string>('celsius');\n  const [loading, setLoading] = useState<boolean>(true); // Add loading state\n  const [cities, setCities] = useState<string[]>([localStorage.getItem('defaultCity') || 'london'])\n  const [isDarkMode, setIsDarkMode] = useState<boolean>(false)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true); // Set loading to true when fetching starts\n      try {\n        const response = await fetch(`http://api.weatherapi.com/v1/forecast.json?q=${city}&key=${API_KEY}&days=10`);\n        if (!response.ok) {\n          throw new Error('City not found');\n        }\n        const result = await response.json();\n        setData(result);\n      } catch (e) {\n        console.error(e);\n        alert('City not found. Please enter a valid city name.');\n      } finally {\n        setLoading(false); // Set loading to false after fetching completes\n      }\n    };\n\n    fetchData();\n  }, [city]);\n\n  return (\n    <div className={`App ${isDarkMode ? 'dark' : 'light'}`}>\n      <Header isDarkMode={isDarkMode} setCities={setCities} setCity={setCity} />\n      <SideBar tempType={tempType} cities={cities} setCity={setCity} setCities={setCities} isDarkMode={isDarkMode}/>\n      <Routes>\n        <Route\n          path=\"/\"\n          element={ <MainContent city={city} setCity={setCity} data={data} tempType={tempType} setCities={setCities} isDarkMode={isDarkMode}/> }\n        />\n        <Route\n          path=\"/Settings\"\n          element={<Setting setTempType={setTempType} isDarkMode={isDarkMode} setIsDarkMode={setIsDarkMode} setCity={setCity} setCities={setCities} cities={cities}/>}\n        />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}