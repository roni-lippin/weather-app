{"ast":null,"code":"var _jsxFileName = \"/Users/ronili/Desktop/enter/code/weather-app/src/components/sideBarItem/SideBarItem.tsx\";\nimport React from \"react\";\nimport \"./sideBarItem.css\";\nimport x from \"../xmark-solid.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SideBarItem = ({\n  city,\n  temp,\n  situation,\n  minTemp,\n  maxTemp,\n  time,\n  setCity,\n  setCities,\n  cities\n}) => {\n  const handleClick = () => {\n    setCity(city);\n  };\n  const handleDelete = cityToDelete => {\n    let newCities = cities.filter(c => c.toLowerCase() !== cityToDelete.toLowerCase());\n    if (cityToDelete === city) {\n      if (newCities.length == 0) {\n        newCities = [localStorage.getItem('defaultCity') || 'london'];\n      }\n      setCity(newCities[0]);\n    }\n    setCities(newCities);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"city\",\n    tabIndex: 0,\n    onClick: handleClick,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"city-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"city-name-bar\",\n        children: city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"city-time\",\n        children: time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"situation\",\n      children: situation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"city-temp-current\",\n      children: [parseInt(temp.toString()), \"\\xB0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-max-temp\",\n      children: [\"H: \", parseInt(maxTemp.toString()), \"\\xB0 L: \", parseInt(minTemp.toString()), \"\\xB0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"remove-city\",\n      onClick: e => {\n        e.stopPropagation(); // Prevent the click from bubbling up to the city div\n        handleDelete(city);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"forecast-Image\",\n        src: x,\n        style: {\n          width: '20px',\n          height: '20px'\n        },\n        alt: \"weather icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_c = SideBarItem;\nexport default SideBarItem;\nvar _c;\n$RefreshReg$(_c, \"SideBarItem\");","map":{"version":3,"names":["React","x","jsxDEV","_jsxDEV","SideBarItem","city","temp","situation","minTemp","maxTemp","time","setCity","setCities","cities","handleClick","handleDelete","cityToDelete","newCities","filter","c","toLowerCase","length","localStorage","getItem","className","tabIndex","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","parseInt","toString","e","stopPropagation","id","src","style","width","height","alt","_c","$RefreshReg$"],"sources":["/Users/ronili/Desktop/enter/code/weather-app/src/components/sideBarItem/SideBarItem.tsx"],"sourcesContent":["import React from \"react\";\nimport \"./sideBarItem.css\";\nimport x from \"../xmark-solid.svg\"\n\ninterface Props {\n    city: string;\n    temp: number;\n    situation: string;\n    minTemp: number;\n    maxTemp: number;\n    time: string; // Add time prop\n    setCity: React.Dispatch<React.SetStateAction<string>>;\n    setCities: React.Dispatch<React.SetStateAction<string[]>>;\n    cities: string[];\n}\n\nconst SideBarItem: React.FC<Props> = ({ city, temp, situation, minTemp, maxTemp, time, setCity, setCities, cities }) => {\n    const handleClick = () => {\n        setCity(city);\n    };\n\n\n    const handleDelete = (cityToDelete: string) => {\n        let newCities = cities.filter(c => c.toLowerCase() !== cityToDelete.toLowerCase());\n\n        if (cityToDelete === city) {\n            if (newCities.length == 0) {\n                newCities = [localStorage.getItem('defaultCity') || 'london']\n            }\n            setCity(newCities[0]);\n        }\n        setCities(newCities);\n    };\n\n    return (\n        <div className=\"city\" tabIndex={0} onClick={handleClick}>\n            <div className=\"city-info\">\n                <div className=\"city-name-bar\">{city}</div>\n                <div className=\"city-time\">{time}</div> {/* Display the local time */}\n            </div>\n            <div className=\"situation\">{situation}</div>\n            <div className=\"city-temp-current\">{parseInt(temp.toString())}°</div>\n            <div className=\"min-max-temp\">\n                H: {parseInt(maxTemp.toString())}° L: {parseInt(minTemp.toString())}°\n            </div>\n            <button className=\"remove-city\" onClick={(e) => {\n                e.stopPropagation(); // Prevent the click from bubbling up to the city div\n                handleDelete(city);\n            }}><img id=\"forecast-Image\" src={x} style={{ width: '20px', height: '20px' }} alt=\"weather icon\" /></button>\n        </div>\n    );\n};\n\nexport default SideBarItem;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}